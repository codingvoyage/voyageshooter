print "This is a test of the Voyage scripting language"
print "First, the program will call Fibonacci(33) and record the time elapsed"


getSystemNanoTime a
callfunction [fibonacci] 33 --> result
getSystemNanoTime b

evaluate b - a --> elapsedTime

getSystemNanoTime c
eval elapsedTime / 1000000000 --> benchmarkInSeconds
getSystemNanoTime d

print <-- "Fibonacci(33) equals " + result
print <-- [ "it took " + [ b - a ] ] + " nanoseconds to compute"
print <-- [ "or " + benchmarkInSeconds ] + " seconds." 
print <-- [ "It took roughly " + [ d - c ] ] + " nanoseconds to perform the division"
print "that converted from nanoseconds to seconds."


print "time to test time for doing nothing"

getSystemNanoTime a
callfunction [doNothing]
getSystemNanoTime b

print <-- [ "it took " + [ b - a ] ] + " nanoseconds to make the call"

endthread 


function [doNothing]

print "hello"

return

function [fibonacci] number

    if number == 0
        return 0
    endif

    if number == 1
        return 1
    endif

    evaluate number - 2 --> term1
    evaluate number - 1 --> term2

    callfunction [fibonacci] term1 --> term1
    callfunction [fibonacci] term2 --> term2

    evaluate term1 + term2 --> sum

return sum  