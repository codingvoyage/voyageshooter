var mainhandle
var ENTITYID "boss"

-- Needed for loading purposes.
wait 50

-- Give this Thread a reference to the Entity
getThreadID ourID
bindthreadtomarionette ourID ENTITYID


label [LOOP]


    -- Get the current State from the mainhandle, so it's like asking
    -- mission control or the brain for the latest news.
    callthreadfunction mainhandle [getCurrentState] --> currentState


    -- ====================
    -- When body slamming the player, shoot him too!
    -- ====================
    if currentState == 1

        -- Shoot 10 bursts of bullets
        for count = 0 and count < 20

            -- Each burst of bullets...
            for i = 0 and i < 360

                -- We wait to give the bullets a bit of time to emerge
                fire i 20
                wait 20

                -- Add some randomness to the shooting time.
                rand 10 50 --> shootingvariation

            next i + shootingvariation --> i

            -- If currentState had changed, we want to stop shooting ASAP
            goto [ABORT_SHOOTING]

            -- wait 30
        next count + 1 --> count

    endif
    label [ABORT_SHOOTING]

    -- ====================
    -- Shoot bullets around in a circle
    -- ====================
    if currentState == 2
        print "!!!"

        for angle = 0 and angle < 360

            eval angle + 1 --> angle2
            eval angle2 + 1 --> angle3

            fire angle 50
            fire angle2 50
            fire angle3 50

        next angle + 30 --> angle

        wait 300
    endif

    if currentState == 3
        wait 500

        -- Updated bullet rain, using random velocities and displacements to make
        -- this a challenging, yet reasonable rain of bullets to avoid.
        -- We aren't going to regularly check for another State, since 3 is the
        -- desperation move and so the rain runs on forever.

        setvar done false
        while done == false

            -- Randomize the number fired and the delay between firings
            rand 3 6 --> rateoffire
            rand 150 300 --> delay

            for i = 0 and i < rateoffire

                -- BULLET SETTINGS
                -- Randomize initialDisplacement of rows, spacing, and velocity
                rand -450 350 --> initialDisplacement
                rand 75 100 --> spaceBetweenBullets
                rand 15 50 --> velocity
                setvar angle 0
                setvar distanceFromStart 20

                -- callscriptfunction 1 [shootRowNonCenteredVelocity] 0 50 rateoffire spaceBetweenBullets initialDisplacement velocity
                -- WE MODIFY SHOOT-ROWS-WITH-CUSTOM-VELOCITY-NON-CENTERED
                -- SO THAT WE CAN HAVE A BIT OF A WOBBLE!

                setvar bulletCount rateoffire
                setvar displacement spaceBetweenBullets
                setvar currentDisplacement initialDisplacement

                -- function [shootRowNonCenteredVelocity] angle distanceFromStart bulletCount displacement initialDisplacement velocity
                for j = 0 and j < bulletCount

                    -- ============================================================
                    -- --------------------BEGIN FUNCTION -------------------------
                    -- ============================================================
                    -- Magic variable 25 is BULLET_OFFSET
                    -- Magic variable 90 is ROTATION_FACTOR

                    getEntityX entityX
                    getEntityY entityY
                    getEntityAngle entityAngle

                    eval [ entityAngle - 90 ] + angle --> adjustedAngle
                    toradian adjustedAngle --> angleInRad

                    eval entityX + 25 --> entityCenterX
                    eval entityY + 25 --> entityCenterY

                    cos angleInRad --> cosVal
                    sin angleInRad --> sinVal
                    eval cosVal * distanceFromStart --> distanceOffsetX
                    eval sinVal * distanceFromStart --> distanceOffsetY

                    eval entityCenterX + distanceOffsetX --> fireX
                    eval entityCenterY + distanceOffsetY --> fireY
                    eval entityAngle + angle --> fireR

                    -- Now, we must transform fireX and fireY
                    -- so that it is perpendicular to the angle?

                    eval entityAngle + angle --> theAngle
                    toradian theAngle --> theAngle

                    cos theAngle --> cosAngle
                    sin theAngle --> sinAngle

                    eval currentDisplacement * cosAngle --> xStuff
                    eval currentDisplacement * sinAngle --> yStuff

                    eval fireX - xStuff --> fireX
                    eval fireY - yStuff --> fireY

                    -- Now the wobble depends on how much we mess with fireR
                    rand 0.5 8.5 --> wobbleFactor
                    rand 0 1 --> posNeg
                    if posNeg == 0
                        -- Negative
                        eval wobbleFactor * -1 --> wobbleFactor
                    endif
                    eval fireR + wobbleFactor --> fireR

                    spawnBulletAtVelocity fireX fireY fireR velocity
                    -- ============================================================
                    -- ----------------------END FUNCTION -------------------------
                    -- ============================================================

                    eval currentDisplacement + displacement --> currentDisplacement
                next j + 1 --> j

            next i + 1 --> i

            wait delay
        wend

        wait 300
    endif

    wait 100


goto [LOOP]



function [giveMainHandle] thehandle
    setvar mainhandle thehandle
return
